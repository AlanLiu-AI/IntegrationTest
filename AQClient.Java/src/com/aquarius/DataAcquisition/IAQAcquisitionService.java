
package com.aquarius.DataAcquisition;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6b21 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IAQAcquisitionService", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IAQAcquisitionService {


    /**
     * 
     * @param encodedPassword
     * @param user
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetAuthTokenResponse>
     */
    @WebMethod(operationName = "GetAuthToken", action = "http://tempuri.org/IAQAuthSession/GetAuthToken")
    @RequestWrapper(localName = "GetAuthToken", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAuthToken")
    @ResponseWrapper(localName = "GetAuthTokenResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAuthTokenResponse")
    public Response<GetAuthTokenResponse> getAuthTokenAsync(
        @WebParam(name = "user", targetNamespace = "http://tempuri.org/")
        String user,
        @WebParam(name = "encodedPassword", targetNamespace = "http://tempuri.org/")
        String encodedPassword);

    /**
     * 
     * @param encodedPassword
     * @param asyncHandler
     * @param user
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetAuthToken", action = "http://tempuri.org/IAQAuthSession/GetAuthToken")
    @RequestWrapper(localName = "GetAuthToken", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAuthToken")
    @ResponseWrapper(localName = "GetAuthTokenResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAuthTokenResponse")
    public Future<?> getAuthTokenAsync(
        @WebParam(name = "user", targetNamespace = "http://tempuri.org/")
        String user,
        @WebParam(name = "encodedPassword", targetNamespace = "http://tempuri.org/")
        String encodedPassword,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetAuthTokenResponse> asyncHandler);

    /**
     * 
     * @param encodedPassword
     * @param user
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetAuthToken", action = "http://tempuri.org/IAQAuthSession/GetAuthToken")
    @WebResult(name = "GetAuthTokenResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetAuthToken", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAuthToken")
    @ResponseWrapper(localName = "GetAuthTokenResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAuthTokenResponse")
    public String getAuthToken(
        @WebParam(name = "user", targetNamespace = "http://tempuri.org/")
        String user,
        @WebParam(name = "encodedPassword", targetNamespace = "http://tempuri.org/")
        String encodedPassword);

    /**
     * 
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.IsConnectionValidResponse>
     */
    @WebMethod(operationName = "IsConnectionValid", action = "http://tempuri.org/IAQAuthSession/IsConnectionValid")
    @RequestWrapper(localName = "IsConnectionValid", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.IsConnectionValid")
    @ResponseWrapper(localName = "IsConnectionValidResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.IsConnectionValidResponse")
    public Response<IsConnectionValidResponse> isConnectionValidAsync();

    /**
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "IsConnectionValid", action = "http://tempuri.org/IAQAuthSession/IsConnectionValid")
    @RequestWrapper(localName = "IsConnectionValid", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.IsConnectionValid")
    @ResponseWrapper(localName = "IsConnectionValidResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.IsConnectionValidResponse")
    public Future<?> isConnectionValidAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<IsConnectionValidResponse> asyncHandler);

    /**
     * 
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "IsConnectionValid", action = "http://tempuri.org/IAQAuthSession/IsConnectionValid")
    @WebResult(name = "IsConnectionValidResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "IsConnectionValid", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.IsConnectionValid")
    @ResponseWrapper(localName = "IsConnectionValidResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.IsConnectionValidResponse")
    public Boolean isConnectionValid();

    /**
     * 
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.KeepConnectionAliveResponse>
     */
    @WebMethod(operationName = "KeepConnectionAlive", action = "http://tempuri.org/IAQAuthSession/KeepConnectionAlive")
    @RequestWrapper(localName = "KeepConnectionAlive", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.KeepConnectionAlive")
    @ResponseWrapper(localName = "KeepConnectionAliveResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.KeepConnectionAliveResponse")
    public Response<KeepConnectionAliveResponse> keepConnectionAliveAsync();

    /**
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "KeepConnectionAlive", action = "http://tempuri.org/IAQAuthSession/KeepConnectionAlive")
    @RequestWrapper(localName = "KeepConnectionAlive", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.KeepConnectionAlive")
    @ResponseWrapper(localName = "KeepConnectionAliveResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.KeepConnectionAliveResponse")
    public Future<?> keepConnectionAliveAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<KeepConnectionAliveResponse> asyncHandler);

    /**
     * 
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "KeepConnectionAlive", action = "http://tempuri.org/IAQAuthSession/KeepConnectionAlive")
    @WebResult(name = "KeepConnectionAliveResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "KeepConnectionAlive", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.KeepConnectionAlive")
    @ResponseWrapper(localName = "KeepConnectionAliveResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.KeepConnectionAliveResponse")
    public Boolean keepConnectionAlive();

    /**
     * 
     * @param identifier
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetTimeSeriesIDResponse>
     */
    @WebMethod(operationName = "GetTimeSeriesID", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesID")
    @RequestWrapper(localName = "GetTimeSeriesID", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID")
    @ResponseWrapper(localName = "GetTimeSeriesIDResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesIDResponse")
    public Response<GetTimeSeriesIDResponse> getTimeSeriesIDAsync(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier);

    /**
     * 
     * @param asyncHandler
     * @param identifier
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetTimeSeriesID", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesID")
    @RequestWrapper(localName = "GetTimeSeriesID", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID")
    @ResponseWrapper(localName = "GetTimeSeriesIDResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesIDResponse")
    public Future<?> getTimeSeriesIDAsync(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetTimeSeriesIDResponse> asyncHandler);

    /**
     * 
     * @param identifier
     * @return
     *     returns java.lang.Long
     */
    @WebMethod(operationName = "GetTimeSeriesID", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesID")
    @WebResult(name = "GetTimeSeriesIDResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTimeSeriesID", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID")
    @ResponseWrapper(localName = "GetTimeSeriesIDResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesIDResponse")
    public Long getTimeSeriesID(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier);

    /**
     * 
     * @param parentLabel
     * @param parameterType
     * @param identifier
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetTimeSeriesID2Response>
     */
    @WebMethod(operationName = "GetTimeSeriesID2", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesID2")
    @RequestWrapper(localName = "GetTimeSeriesID2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID2")
    @ResponseWrapper(localName = "GetTimeSeriesID2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID2Response")
    public Response<GetTimeSeriesID2Response> getTimeSeriesID2Async(
        @WebParam(name = "parentLabel", targetNamespace = "http://tempuri.org/")
        String parentLabel,
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier,
        @WebParam(name = "parameterType", targetNamespace = "http://tempuri.org/")
        String parameterType);

    /**
     * 
     * @param parentLabel
     * @param asyncHandler
     * @param parameterType
     * @param identifier
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetTimeSeriesID2", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesID2")
    @RequestWrapper(localName = "GetTimeSeriesID2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID2")
    @ResponseWrapper(localName = "GetTimeSeriesID2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID2Response")
    public Future<?> getTimeSeriesID2Async(
        @WebParam(name = "parentLabel", targetNamespace = "http://tempuri.org/")
        String parentLabel,
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier,
        @WebParam(name = "parameterType", targetNamespace = "http://tempuri.org/")
        String parameterType,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetTimeSeriesID2Response> asyncHandler);

    /**
     * 
     * @param parentLabel
     * @param parameterType
     * @param identifier
     * @return
     *     returns java.lang.Long
     */
    @WebMethod(operationName = "GetTimeSeriesID2", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesID2")
    @WebResult(name = "GetTimeSeriesID2Result", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTimeSeriesID2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID2")
    @ResponseWrapper(localName = "GetTimeSeriesID2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesID2Response")
    public Long getTimeSeriesID2(
        @WebParam(name = "parentLabel", targetNamespace = "http://tempuri.org/")
        String parentLabel,
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier,
        @WebParam(name = "parameterType", targetNamespace = "http://tempuri.org/")
        String parameterType);

    /**
     * 
     * @param parameterType
     * @param locationID
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetTimeSeriesListResponse>
     */
    @WebMethod(operationName = "GetTimeSeriesList", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesList")
    @RequestWrapper(localName = "GetTimeSeriesList", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesList")
    @ResponseWrapper(localName = "GetTimeSeriesListResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListResponse")
    public Response<GetTimeSeriesListResponse> getTimeSeriesListAsync(
        @WebParam(name = "locationID", targetNamespace = "http://tempuri.org/")
        Long locationID,
        @WebParam(name = "parameterType", targetNamespace = "http://tempuri.org/")
        String parameterType);

    /**
     * 
     * @param asyncHandler
     * @param parameterType
     * @param locationID
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetTimeSeriesList", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesList")
    @RequestWrapper(localName = "GetTimeSeriesList", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesList")
    @ResponseWrapper(localName = "GetTimeSeriesListResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListResponse")
    public Future<?> getTimeSeriesListAsync(
        @WebParam(name = "locationID", targetNamespace = "http://tempuri.org/")
        Long locationID,
        @WebParam(name = "parameterType", targetNamespace = "http://tempuri.org/")
        String parameterType,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetTimeSeriesListResponse> asyncHandler);

    /**
     * 
     * @param parameterType
     * @param locationID
     * @return
     *     returns com.aquarius.DataAcquisition.ArrayOfTimeSeriesDescription
     */
    @WebMethod(operationName = "GetTimeSeriesList", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesList")
    @WebResult(name = "GetTimeSeriesListResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTimeSeriesList", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesList")
    @ResponseWrapper(localName = "GetTimeSeriesListResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListResponse")
    public ArrayOfTimeSeriesDescription getTimeSeriesList(
        @WebParam(name = "locationID", targetNamespace = "http://tempuri.org/")
        Long locationID,
        @WebParam(name = "parameterType", targetNamespace = "http://tempuri.org/")
        String parameterType);

    /**
     * 
     * @param locationID
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetTimeSeriesListForLocationResponse>
     */
    @WebMethod(operationName = "GetTimeSeriesListForLocation", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesListForLocation")
    @RequestWrapper(localName = "GetTimeSeriesListForLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListForLocation")
    @ResponseWrapper(localName = "GetTimeSeriesListForLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListForLocationResponse")
    public Response<GetTimeSeriesListForLocationResponse> getTimeSeriesListForLocationAsync(
        @WebParam(name = "locationID", targetNamespace = "http://tempuri.org/")
        Long locationID);

    /**
     * 
     * @param asyncHandler
     * @param locationID
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetTimeSeriesListForLocation", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesListForLocation")
    @RequestWrapper(localName = "GetTimeSeriesListForLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListForLocation")
    @ResponseWrapper(localName = "GetTimeSeriesListForLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListForLocationResponse")
    public Future<?> getTimeSeriesListForLocationAsync(
        @WebParam(name = "locationID", targetNamespace = "http://tempuri.org/")
        Long locationID,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetTimeSeriesListForLocationResponse> asyncHandler);

    /**
     * 
     * @param locationID
     * @return
     *     returns com.aquarius.DataAcquisition.ArrayOfTimeSeriesDescription
     */
    @WebMethod(operationName = "GetTimeSeriesListForLocation", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeriesListForLocation")
    @WebResult(name = "GetTimeSeriesListForLocationResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTimeSeriesListForLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListForLocation")
    @ResponseWrapper(localName = "GetTimeSeriesListForLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesListForLocationResponse")
    public ArrayOfTimeSeriesDescription getTimeSeriesListForLocation(
        @WebParam(name = "locationID", targetNamespace = "http://tempuri.org/")
        Long locationID);

    /**
     * 
     * @param locationIdentifier
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetLocationIdResponse>
     */
    @WebMethod(operationName = "GetLocationId", action = "http://tempuri.org/IAQAcquisitionService/GetLocationId")
    @RequestWrapper(localName = "GetLocationId", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationId")
    @ResponseWrapper(localName = "GetLocationIdResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationIdResponse")
    public Response<GetLocationIdResponse> getLocationIdAsync(
        @WebParam(name = "locationIdentifier", targetNamespace = "http://tempuri.org/")
        String locationIdentifier);

    /**
     * 
     * @param locationIdentifier
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetLocationId", action = "http://tempuri.org/IAQAcquisitionService/GetLocationId")
    @RequestWrapper(localName = "GetLocationId", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationId")
    @ResponseWrapper(localName = "GetLocationIdResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationIdResponse")
    public Future<?> getLocationIdAsync(
        @WebParam(name = "locationIdentifier", targetNamespace = "http://tempuri.org/")
        String locationIdentifier,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetLocationIdResponse> asyncHandler);

    /**
     * 
     * @param locationIdentifier
     * @return
     *     returns java.lang.Long
     */
    @WebMethod(operationName = "GetLocationId", action = "http://tempuri.org/IAQAcquisitionService/GetLocationId")
    @WebResult(name = "GetLocationIdResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetLocationId", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationId")
    @ResponseWrapper(localName = "GetLocationIdResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationIdResponse")
    public Long getLocationId(
        @WebParam(name = "locationIdentifier", targetNamespace = "http://tempuri.org/")
        String locationIdentifier);

    /**
     * 
     * @param id
     * @param csvbytes
     * @param userName
     * @param comment
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.AppendTimeSeriesFromBytesResponse>
     */
    @WebMethod(operationName = "AppendTimeSeriesFromBytes", action = "http://tempuri.org/IAQAcquisitionService/AppendTimeSeriesFromBytes")
    @RequestWrapper(localName = "AppendTimeSeriesFromBytes", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes")
    @ResponseWrapper(localName = "AppendTimeSeriesFromBytesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytesResponse")
    public Response<AppendTimeSeriesFromBytesResponse> appendTimeSeriesFromBytesAsync(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "csvbytes", targetNamespace = "http://tempuri.org/")
        byte[] csvbytes,
        @WebParam(name = "userName", targetNamespace = "http://tempuri.org/")
        String userName,
        @WebParam(name = "comment", targetNamespace = "http://tempuri.org/")
        String comment);

    /**
     * 
     * @param id
     * @param csvbytes
     * @param asyncHandler
     * @param userName
     * @param comment
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "AppendTimeSeriesFromBytes", action = "http://tempuri.org/IAQAcquisitionService/AppendTimeSeriesFromBytes")
    @RequestWrapper(localName = "AppendTimeSeriesFromBytes", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes")
    @ResponseWrapper(localName = "AppendTimeSeriesFromBytesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytesResponse")
    public Future<?> appendTimeSeriesFromBytesAsync(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "csvbytes", targetNamespace = "http://tempuri.org/")
        byte[] csvbytes,
        @WebParam(name = "userName", targetNamespace = "http://tempuri.org/")
        String userName,
        @WebParam(name = "comment", targetNamespace = "http://tempuri.org/")
        String comment,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<AppendTimeSeriesFromBytesResponse> asyncHandler);

    /**
     * 
     * @param id
     * @param csvbytes
     * @param userName
     * @param comment
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(operationName = "AppendTimeSeriesFromBytes", action = "http://tempuri.org/IAQAcquisitionService/AppendTimeSeriesFromBytes")
    @WebResult(name = "AppendTimeSeriesFromBytesResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "AppendTimeSeriesFromBytes", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes")
    @ResponseWrapper(localName = "AppendTimeSeriesFromBytesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytesResponse")
    public Integer appendTimeSeriesFromBytes(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "csvbytes", targetNamespace = "http://tempuri.org/")
        byte[] csvbytes,
        @WebParam(name = "userName", targetNamespace = "http://tempuri.org/")
        String userName,
        @WebParam(name = "comment", targetNamespace = "http://tempuri.org/")
        String comment);

    /**
     * 
     * @param id
     * @param csvbytes
     * @param userName
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes2Response>
     */
    @WebMethod(operationName = "AppendTimeSeriesFromBytes2", action = "http://tempuri.org/IAQAcquisitionService/AppendTimeSeriesFromBytes2")
    @RequestWrapper(localName = "AppendTimeSeriesFromBytes2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes2")
    @ResponseWrapper(localName = "AppendTimeSeriesFromBytes2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes2Response")
    public Response<AppendTimeSeriesFromBytes2Response> appendTimeSeriesFromBytes2Async(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "csvbytes", targetNamespace = "http://tempuri.org/")
        byte[] csvbytes,
        @WebParam(name = "userName", targetNamespace = "http://tempuri.org/")
        String userName);

    /**
     * 
     * @param id
     * @param csvbytes
     * @param asyncHandler
     * @param userName
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "AppendTimeSeriesFromBytes2", action = "http://tempuri.org/IAQAcquisitionService/AppendTimeSeriesFromBytes2")
    @RequestWrapper(localName = "AppendTimeSeriesFromBytes2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes2")
    @ResponseWrapper(localName = "AppendTimeSeriesFromBytes2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes2Response")
    public Future<?> appendTimeSeriesFromBytes2Async(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "csvbytes", targetNamespace = "http://tempuri.org/")
        byte[] csvbytes,
        @WebParam(name = "userName", targetNamespace = "http://tempuri.org/")
        String userName,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<AppendTimeSeriesFromBytes2Response> asyncHandler);

    /**
     * 
     * @param id
     * @param csvbytes
     * @param userName
     * @return
     *     returns com.aquarius.DataAcquisition.AppendResult
     */
    @WebMethod(operationName = "AppendTimeSeriesFromBytes2", action = "http://tempuri.org/IAQAcquisitionService/AppendTimeSeriesFromBytes2")
    @WebResult(name = "AppendTimeSeriesFromBytes2Result", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "AppendTimeSeriesFromBytes2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes2")
    @ResponseWrapper(localName = "AppendTimeSeriesFromBytes2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendTimeSeriesFromBytes2Response")
    public AppendResult appendTimeSeriesFromBytes2(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "csvbytes", targetNamespace = "http://tempuri.org/")
        byte[] csvbytes,
        @WebParam(name = "userName", targetNamespace = "http://tempuri.org/")
        String userName);

    /**
     * 
     * @param identifier
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.CreateTimeSeriesResponse>
     */
    @WebMethod(operationName = "CreateTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/CreateTimeSeries")
    @RequestWrapper(localName = "CreateTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries")
    @ResponseWrapper(localName = "CreateTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeriesResponse")
    public Response<CreateTimeSeriesResponse> createTimeSeriesAsync(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier);

    /**
     * 
     * @param asyncHandler
     * @param identifier
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "CreateTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/CreateTimeSeries")
    @RequestWrapper(localName = "CreateTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries")
    @ResponseWrapper(localName = "CreateTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeriesResponse")
    public Future<?> createTimeSeriesAsync(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<CreateTimeSeriesResponse> asyncHandler);

    /**
     * 
     * @param identifier
     * @return
     *     returns java.lang.Long
     */
    @WebMethod(operationName = "CreateTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/CreateTimeSeries")
    @WebResult(name = "CreateTimeSeriesResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CreateTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries")
    @ResponseWrapper(localName = "CreateTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeriesResponse")
    public Long createTimeSeries(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier);

    /**
     * 
     * @param unit
     * @param parentId
     * @param parameter
     * @param description
     * @param maxGaps
     * @param label
     * @param utcOffsetInMinutes
     * @param comments
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.CreateTimeSeries2Response>
     */
    @WebMethod(operationName = "CreateTimeSeries2", action = "http://tempuri.org/IAQAcquisitionService/CreateTimeSeries2")
    @RequestWrapper(localName = "CreateTimeSeries2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries2")
    @ResponseWrapper(localName = "CreateTimeSeries2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries2Response")
    public Response<CreateTimeSeries2Response> createTimeSeries2Async(
        @WebParam(name = "parentId", targetNamespace = "http://tempuri.org/")
        Long parentId,
        @WebParam(name = "label", targetNamespace = "http://tempuri.org/")
        String label,
        @WebParam(name = "comments", targetNamespace = "http://tempuri.org/")
        String comments,
        @WebParam(name = "description", targetNamespace = "http://tempuri.org/")
        String description,
        @WebParam(name = "parameter", targetNamespace = "http://tempuri.org/")
        String parameter,
        @WebParam(name = "utcOffsetInMinutes", targetNamespace = "http://tempuri.org/")
        Integer utcOffsetInMinutes,
        @WebParam(name = "unit", targetNamespace = "http://tempuri.org/")
        String unit,
        @WebParam(name = "maxGaps", targetNamespace = "http://tempuri.org/")
        Double maxGaps);

    /**
     * 
     * @param unit
     * @param parentId
     * @param parameter
     * @param description
     * @param asyncHandler
     * @param maxGaps
     * @param label
     * @param utcOffsetInMinutes
     * @param comments
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "CreateTimeSeries2", action = "http://tempuri.org/IAQAcquisitionService/CreateTimeSeries2")
    @RequestWrapper(localName = "CreateTimeSeries2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries2")
    @ResponseWrapper(localName = "CreateTimeSeries2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries2Response")
    public Future<?> createTimeSeries2Async(
        @WebParam(name = "parentId", targetNamespace = "http://tempuri.org/")
        Long parentId,
        @WebParam(name = "label", targetNamespace = "http://tempuri.org/")
        String label,
        @WebParam(name = "comments", targetNamespace = "http://tempuri.org/")
        String comments,
        @WebParam(name = "description", targetNamespace = "http://tempuri.org/")
        String description,
        @WebParam(name = "parameter", targetNamespace = "http://tempuri.org/")
        String parameter,
        @WebParam(name = "utcOffsetInMinutes", targetNamespace = "http://tempuri.org/")
        Integer utcOffsetInMinutes,
        @WebParam(name = "unit", targetNamespace = "http://tempuri.org/")
        String unit,
        @WebParam(name = "maxGaps", targetNamespace = "http://tempuri.org/")
        Double maxGaps,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<CreateTimeSeries2Response> asyncHandler);

    /**
     * 
     * @param unit
     * @param parentId
     * @param parameter
     * @param description
     * @param maxGaps
     * @param label
     * @param utcOffsetInMinutes
     * @param comments
     * @return
     *     returns java.lang.Long
     */
    @WebMethod(operationName = "CreateTimeSeries2", action = "http://tempuri.org/IAQAcquisitionService/CreateTimeSeries2")
    @WebResult(name = "CreateTimeSeries2Result", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CreateTimeSeries2", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries2")
    @ResponseWrapper(localName = "CreateTimeSeries2Response", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateTimeSeries2Response")
    public Long createTimeSeries2(
        @WebParam(name = "parentId", targetNamespace = "http://tempuri.org/")
        Long parentId,
        @WebParam(name = "label", targetNamespace = "http://tempuri.org/")
        String label,
        @WebParam(name = "comments", targetNamespace = "http://tempuri.org/")
        String comments,
        @WebParam(name = "description", targetNamespace = "http://tempuri.org/")
        String description,
        @WebParam(name = "parameter", targetNamespace = "http://tempuri.org/")
        String parameter,
        @WebParam(name = "utcOffsetInMinutes", targetNamespace = "http://tempuri.org/")
        Integer utcOffsetInMinutes,
        @WebParam(name = "unit", targetNamespace = "http://tempuri.org/")
        String unit,
        @WebParam(name = "maxGaps", targetNamespace = "http://tempuri.org/")
        Double maxGaps);

    /**
     * 
     * @param configName
     * @param filePath
     * @param parameterMap
     * @param comment
     * @param siteName
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.AppendAndMergeResponse>
     */
    @WebMethod(operationName = "AppendAndMerge", action = "http://tempuri.org/IAQAcquisitionService/AppendAndMerge")
    @RequestWrapper(localName = "AppendAndMerge", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendAndMerge")
    @ResponseWrapper(localName = "AppendAndMergeResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendAndMergeResponse")
    public Response<AppendAndMergeResponse> appendAndMergeAsync(
        @WebParam(name = "SiteName", targetNamespace = "http://tempuri.org/")
        String siteName,
        @WebParam(name = "comment", targetNamespace = "http://tempuri.org/")
        String comment,
        @WebParam(name = "configName", targetNamespace = "http://tempuri.org/")
        String configName,
        @WebParam(name = "parameterMap", targetNamespace = "http://tempuri.org/")
        String parameterMap,
        @WebParam(name = "filePath", targetNamespace = "http://tempuri.org/")
        String filePath);

    /**
     * 
     * @param configName
     * @param filePath
     * @param parameterMap
     * @param asyncHandler
     * @param comment
     * @param siteName
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "AppendAndMerge", action = "http://tempuri.org/IAQAcquisitionService/AppendAndMerge")
    @RequestWrapper(localName = "AppendAndMerge", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendAndMerge")
    @ResponseWrapper(localName = "AppendAndMergeResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendAndMergeResponse")
    public Future<?> appendAndMergeAsync(
        @WebParam(name = "SiteName", targetNamespace = "http://tempuri.org/")
        String siteName,
        @WebParam(name = "comment", targetNamespace = "http://tempuri.org/")
        String comment,
        @WebParam(name = "configName", targetNamespace = "http://tempuri.org/")
        String configName,
        @WebParam(name = "parameterMap", targetNamespace = "http://tempuri.org/")
        String parameterMap,
        @WebParam(name = "filePath", targetNamespace = "http://tempuri.org/")
        String filePath,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<AppendAndMergeResponse> asyncHandler);

    /**
     * 
     * @param configName
     * @param filePath
     * @param parameterMap
     * @param comment
     * @param siteName
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(operationName = "AppendAndMerge", action = "http://tempuri.org/IAQAcquisitionService/AppendAndMerge")
    @WebResult(name = "AppendAndMergeResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "AppendAndMerge", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendAndMerge")
    @ResponseWrapper(localName = "AppendAndMergeResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.AppendAndMergeResponse")
    public Integer appendAndMerge(
        @WebParam(name = "SiteName", targetNamespace = "http://tempuri.org/")
        String siteName,
        @WebParam(name = "comment", targetNamespace = "http://tempuri.org/")
        String comment,
        @WebParam(name = "configName", targetNamespace = "http://tempuri.org/")
        String configName,
        @WebParam(name = "parameterMap", targetNamespace = "http://tempuri.org/")
        String parameterMap,
        @WebParam(name = "filePath", targetNamespace = "http://tempuri.org/")
        String filePath);

    /**
     * 
     * @param appendToken
     * @param identifier
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.UndoAppendResponse>
     */
    @WebMethod(operationName = "UndoAppend", action = "http://tempuri.org/IAQAcquisitionService/UndoAppend")
    @RequestWrapper(localName = "UndoAppend", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.UndoAppend")
    @ResponseWrapper(localName = "UndoAppendResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.UndoAppendResponse")
    public Response<UndoAppendResponse> undoAppendAsync(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier,
        @WebParam(name = "appendToken", targetNamespace = "http://tempuri.org/")
        String appendToken);

    /**
     * 
     * @param appendToken
     * @param asyncHandler
     * @param identifier
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "UndoAppend", action = "http://tempuri.org/IAQAcquisitionService/UndoAppend")
    @RequestWrapper(localName = "UndoAppend", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.UndoAppend")
    @ResponseWrapper(localName = "UndoAppendResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.UndoAppendResponse")
    public Future<?> undoAppendAsync(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier,
        @WebParam(name = "appendToken", targetNamespace = "http://tempuri.org/")
        String appendToken,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<UndoAppendResponse> asyncHandler);

    /**
     * 
     * @param appendToken
     * @param identifier
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(operationName = "UndoAppend", action = "http://tempuri.org/IAQAcquisitionService/UndoAppend")
    @WebResult(name = "UndoAppendResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "UndoAppend", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.UndoAppend")
    @ResponseWrapper(localName = "UndoAppendResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.UndoAppendResponse")
    public Integer undoAppend(
        @WebParam(name = "identifier", targetNamespace = "http://tempuri.org/")
        String identifier,
        @WebParam(name = "appendToken", targetNamespace = "http://tempuri.org/")
        String appendToken);

    /**
     * 
     * @param asOfTime
     * @param viewName
     * @param fromTime
     * @param aqDataId
     * @param toTime
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetTimeSeriesResponse>
     */
    @WebMethod(operationName = "GetTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeries")
    @RequestWrapper(localName = "GetTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeries")
    @ResponseWrapper(localName = "GetTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesResponse")
    public Response<GetTimeSeriesResponse> getTimeSeriesAsync(
        @WebParam(name = "aqDataId", targetNamespace = "http://tempuri.org/")
        Long aqDataId,
        @WebParam(name = "viewName", targetNamespace = "http://tempuri.org/")
        String viewName,
        @WebParam(name = "fromTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar fromTime,
        @WebParam(name = "toTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar toTime,
        @WebParam(name = "asOfTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar asOfTime);

    /**
     * 
     * @param asOfTime
     * @param viewName
     * @param asyncHandler
     * @param fromTime
     * @param aqDataId
     * @param toTime
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeries")
    @RequestWrapper(localName = "GetTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeries")
    @ResponseWrapper(localName = "GetTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesResponse")
    public Future<?> getTimeSeriesAsync(
        @WebParam(name = "aqDataId", targetNamespace = "http://tempuri.org/")
        Long aqDataId,
        @WebParam(name = "viewName", targetNamespace = "http://tempuri.org/")
        String viewName,
        @WebParam(name = "fromTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar fromTime,
        @WebParam(name = "toTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar toTime,
        @WebParam(name = "asOfTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar asOfTime,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetTimeSeriesResponse> asyncHandler);

    /**
     * 
     * @param asOfTime
     * @param viewName
     * @param fromTime
     * @param aqDataId
     * @param toTime
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/GetTimeSeries")
    @WebResult(name = "GetTimeSeriesResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeries")
    @ResponseWrapper(localName = "GetTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetTimeSeriesResponse")
    public String getTimeSeries(
        @WebParam(name = "aqDataId", targetNamespace = "http://tempuri.org/")
        Long aqDataId,
        @WebParam(name = "viewName", targetNamespace = "http://tempuri.org/")
        String viewName,
        @WebParam(name = "fromTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar fromTime,
        @WebParam(name = "toTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar toTime,
        @WebParam(name = "asOfTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar asOfTime);

    /**
     * 
     * @param startTime
     * @param id
     * @param endTime
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.DeleteTimeSeriesPointsByTimeRangeResponse>
     */
    @WebMethod(operationName = "DeleteTimeSeriesPointsByTimeRange", action = "http://tempuri.org/IAQAcquisitionService/DeleteTimeSeriesPointsByTimeRange")
    @RequestWrapper(localName = "DeleteTimeSeriesPointsByTimeRange", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesPointsByTimeRange")
    @ResponseWrapper(localName = "DeleteTimeSeriesPointsByTimeRangeResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesPointsByTimeRangeResponse")
    public Response<DeleteTimeSeriesPointsByTimeRangeResponse> deleteTimeSeriesPointsByTimeRangeAsync(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "startTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar startTime,
        @WebParam(name = "endTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar endTime);

    /**
     * 
     * @param startTime
     * @param id
     * @param asyncHandler
     * @param endTime
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "DeleteTimeSeriesPointsByTimeRange", action = "http://tempuri.org/IAQAcquisitionService/DeleteTimeSeriesPointsByTimeRange")
    @RequestWrapper(localName = "DeleteTimeSeriesPointsByTimeRange", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesPointsByTimeRange")
    @ResponseWrapper(localName = "DeleteTimeSeriesPointsByTimeRangeResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesPointsByTimeRangeResponse")
    public Future<?> deleteTimeSeriesPointsByTimeRangeAsync(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "startTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar startTime,
        @WebParam(name = "endTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar endTime,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<DeleteTimeSeriesPointsByTimeRangeResponse> asyncHandler);

    /**
     * 
     * @param startTime
     * @param id
     * @param endTime
     * @return
     *     returns java.lang.Integer
     */
    @WebMethod(operationName = "DeleteTimeSeriesPointsByTimeRange", action = "http://tempuri.org/IAQAcquisitionService/DeleteTimeSeriesPointsByTimeRange")
    @WebResult(name = "DeleteTimeSeriesPointsByTimeRangeResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "DeleteTimeSeriesPointsByTimeRange", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesPointsByTimeRange")
    @ResponseWrapper(localName = "DeleteTimeSeriesPointsByTimeRangeResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesPointsByTimeRangeResponse")
    public Integer deleteTimeSeriesPointsByTimeRange(
        @WebParam(name = "id", targetNamespace = "http://tempuri.org/")
        Long id,
        @WebParam(name = "startTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar startTime,
        @WebParam(name = "endTime", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar endTime);

    /**
     * 
     * @param timeSeriesId
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.DeleteTimeSeriesResponse>
     */
    @WebMethod(operationName = "DeleteTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/DeleteTimeSeries")
    @RequestWrapper(localName = "DeleteTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeries")
    @ResponseWrapper(localName = "DeleteTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesResponse")
    public Response<DeleteTimeSeriesResponse> deleteTimeSeriesAsync(
        @WebParam(name = "timeSeriesId", targetNamespace = "http://tempuri.org/")
        Long timeSeriesId);

    /**
     * 
     * @param asyncHandler
     * @param timeSeriesId
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "DeleteTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/DeleteTimeSeries")
    @RequestWrapper(localName = "DeleteTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeries")
    @ResponseWrapper(localName = "DeleteTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesResponse")
    public Future<?> deleteTimeSeriesAsync(
        @WebParam(name = "timeSeriesId", targetNamespace = "http://tempuri.org/")
        Long timeSeriesId,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<DeleteTimeSeriesResponse> asyncHandler);

    /**
     * 
     * @param timeSeriesId
     */
    @WebMethod(operationName = "DeleteTimeSeries", action = "http://tempuri.org/IAQAcquisitionService/DeleteTimeSeries")
    @RequestWrapper(localName = "DeleteTimeSeries", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeries")
    @ResponseWrapper(localName = "DeleteTimeSeriesResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.DeleteTimeSeriesResponse")
    public void deleteTimeSeries(
        @WebParam(name = "timeSeriesId", targetNamespace = "http://tempuri.org/")
        Long timeSeriesId);

    /**
     * 
     * @param locationId
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetFieldVisitsByLocationResponse>
     */
    @WebMethod(operationName = "GetFieldVisitsByLocation", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocation")
    @RequestWrapper(localName = "GetFieldVisitsByLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocation")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationResponse")
    public Response<GetFieldVisitsByLocationResponse> getFieldVisitsByLocationAsync(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId);

    /**
     * 
     * @param locationId
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetFieldVisitsByLocation", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocation")
    @RequestWrapper(localName = "GetFieldVisitsByLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocation")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationResponse")
    public Future<?> getFieldVisitsByLocationAsync(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetFieldVisitsByLocationResponse> asyncHandler);

    /**
     * 
     * @param locationId
     * @return
     *     returns com.aquarius.DataAcquisition.ArrayOfFieldVisit
     */
    @WebMethod(operationName = "GetFieldVisitsByLocation", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocation")
    @WebResult(name = "GetFieldVisitsByLocationResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetFieldVisitsByLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocation")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationResponse")
    public ArrayOfFieldVisit getFieldVisitsByLocation(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId);

    /**
     * 
     * @param startDate
     * @param locationId
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetFieldVisitsByLocationAndDateResponse>
     */
    @WebMethod(operationName = "GetFieldVisitsByLocationAndDate", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocationAndDate")
    @RequestWrapper(localName = "GetFieldVisitsByLocationAndDate", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationAndDate")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationAndDateResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationAndDateResponse")
    public Response<GetFieldVisitsByLocationAndDateResponse> getFieldVisitsByLocationAndDateAsync(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId,
        @WebParam(name = "startDate", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar startDate);

    /**
     * 
     * @param startDate
     * @param locationId
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetFieldVisitsByLocationAndDate", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocationAndDate")
    @RequestWrapper(localName = "GetFieldVisitsByLocationAndDate", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationAndDate")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationAndDateResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationAndDateResponse")
    public Future<?> getFieldVisitsByLocationAndDateAsync(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId,
        @WebParam(name = "startDate", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar startDate,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetFieldVisitsByLocationAndDateResponse> asyncHandler);

    /**
     * 
     * @param startDate
     * @param locationId
     * @return
     *     returns com.aquarius.DataAcquisition.ArrayOfFieldVisit
     */
    @WebMethod(operationName = "GetFieldVisitsByLocationAndDate", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocationAndDate")
    @WebResult(name = "GetFieldVisitsByLocationAndDateResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetFieldVisitsByLocationAndDate", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationAndDate")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationAndDateResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationAndDateResponse")
    public ArrayOfFieldVisit getFieldVisitsByLocationAndDate(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId,
        @WebParam(name = "startDate", targetNamespace = "http://tempuri.org/")
        XMLGregorianCalendar startDate);

    /**
     * 
     * @param locationId
     * @param changedSince
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetFieldVisitsByLocationChangedSinceResponse>
     */
    @WebMethod(operationName = "GetFieldVisitsByLocationChangedSince", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocationChangedSince")
    @RequestWrapper(localName = "GetFieldVisitsByLocationChangedSince", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationChangedSince")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationChangedSinceResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationChangedSinceResponse")
    public Response<GetFieldVisitsByLocationChangedSinceResponse> getFieldVisitsByLocationChangedSinceAsync(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId,
        @WebParam(name = "changedSince", targetNamespace = "http://tempuri.org/")
        String changedSince);

    /**
     * 
     * @param locationId
     * @param asyncHandler
     * @param changedSince
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetFieldVisitsByLocationChangedSince", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocationChangedSince")
    @RequestWrapper(localName = "GetFieldVisitsByLocationChangedSince", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationChangedSince")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationChangedSinceResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationChangedSinceResponse")
    public Future<?> getFieldVisitsByLocationChangedSinceAsync(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId,
        @WebParam(name = "changedSince", targetNamespace = "http://tempuri.org/")
        String changedSince,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetFieldVisitsByLocationChangedSinceResponse> asyncHandler);

    /**
     * 
     * @param locationId
     * @param changedSince
     * @return
     *     returns com.aquarius.DataAcquisition.ArrayOfFieldVisit
     */
    @WebMethod(operationName = "GetFieldVisitsByLocationChangedSince", action = "http://tempuri.org/IAQAcquisitionService/GetFieldVisitsByLocationChangedSince")
    @WebResult(name = "GetFieldVisitsByLocationChangedSinceResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetFieldVisitsByLocationChangedSince", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationChangedSince")
    @ResponseWrapper(localName = "GetFieldVisitsByLocationChangedSinceResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetFieldVisitsByLocationChangedSinceResponse")
    public ArrayOfFieldVisit getFieldVisitsByLocationChangedSince(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId,
        @WebParam(name = "changedSince", targetNamespace = "http://tempuri.org/")
        String changedSince);

    /**
     * 
     * @param fv
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.SaveFieldVisitResponse>
     */
    @WebMethod(operationName = "SaveFieldVisit", action = "http://tempuri.org/IAQAcquisitionService/SaveFieldVisit")
    @RequestWrapper(localName = "SaveFieldVisit", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.SaveFieldVisit")
    @ResponseWrapper(localName = "SaveFieldVisitResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.SaveFieldVisitResponse")
    public Response<SaveFieldVisitResponse> saveFieldVisitAsync(
        @WebParam(name = "fv", targetNamespace = "http://tempuri.org/")
        FieldVisit fv);

    /**
     * 
     * @param fv
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "SaveFieldVisit", action = "http://tempuri.org/IAQAcquisitionService/SaveFieldVisit")
    @RequestWrapper(localName = "SaveFieldVisit", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.SaveFieldVisit")
    @ResponseWrapper(localName = "SaveFieldVisitResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.SaveFieldVisitResponse")
    public Future<?> saveFieldVisitAsync(
        @WebParam(name = "fv", targetNamespace = "http://tempuri.org/")
        FieldVisit fv,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<SaveFieldVisitResponse> asyncHandler);

    /**
     * 
     * @param fv
     * @return
     *     returns com.aquarius.DataAcquisition.FieldVisit
     */
    @WebMethod(operationName = "SaveFieldVisit", action = "http://tempuri.org/IAQAcquisitionService/SaveFieldVisit")
    @WebResult(name = "SaveFieldVisitResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "SaveFieldVisit", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.SaveFieldVisit")
    @ResponseWrapper(localName = "SaveFieldVisitResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.SaveFieldVisitResponse")
    public FieldVisit saveFieldVisit(
        @WebParam(name = "fv", targetNamespace = "http://tempuri.org/")
        FieldVisit fv);

    /**
     * 
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetAllLocationsResponse>
     */
    @WebMethod(operationName = "GetAllLocations", action = "http://tempuri.org/IAQAcquisitionService/GetAllLocations")
    @RequestWrapper(localName = "GetAllLocations", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAllLocations")
    @ResponseWrapper(localName = "GetAllLocationsResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAllLocationsResponse")
    public Response<GetAllLocationsResponse> getAllLocationsAsync();

    /**
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetAllLocations", action = "http://tempuri.org/IAQAcquisitionService/GetAllLocations")
    @RequestWrapper(localName = "GetAllLocations", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAllLocations")
    @ResponseWrapper(localName = "GetAllLocationsResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAllLocationsResponse")
    public Future<?> getAllLocationsAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetAllLocationsResponse> asyncHandler);

    /**
     * 
     * @return
     *     returns com.aquarius.DataAcquisition.ArrayOfLocationDTO
     */
    @WebMethod(operationName = "GetAllLocations", action = "http://tempuri.org/IAQAcquisitionService/GetAllLocations")
    @WebResult(name = "GetAllLocationsResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetAllLocations", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAllLocations")
    @ResponseWrapper(localName = "GetAllLocationsResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetAllLocationsResponse")
    public ArrayOfLocationDTO getAllLocations();

    /**
     * 
     * @param locationId
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.GetLocationResponse>
     */
    @WebMethod(operationName = "GetLocation", action = "http://tempuri.org/IAQAcquisitionService/GetLocation")
    @RequestWrapper(localName = "GetLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocation")
    @ResponseWrapper(localName = "GetLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationResponse")
    public Response<GetLocationResponse> getLocationAsync(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId);

    /**
     * 
     * @param locationId
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "GetLocation", action = "http://tempuri.org/IAQAcquisitionService/GetLocation")
    @RequestWrapper(localName = "GetLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocation")
    @ResponseWrapper(localName = "GetLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationResponse")
    public Future<?> getLocationAsync(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<GetLocationResponse> asyncHandler);

    /**
     * 
     * @param locationId
     * @return
     *     returns com.aquarius.DataAcquisition.LocationDTO
     */
    @WebMethod(operationName = "GetLocation", action = "http://tempuri.org/IAQAcquisitionService/GetLocation")
    @WebResult(name = "GetLocationResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocation")
    @ResponseWrapper(localName = "GetLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.GetLocationResponse")
    public LocationDTO getLocation(
        @WebParam(name = "locationId", targetNamespace = "http://tempuri.org/")
        Long locationId);

    /**
     * 
     * @param location
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.CreateLocationResponse>
     */
    @WebMethod(operationName = "CreateLocation", action = "http://tempuri.org/IAQAcquisitionService/CreateLocation")
    @RequestWrapper(localName = "CreateLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateLocation")
    @ResponseWrapper(localName = "CreateLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateLocationResponse")
    public Response<CreateLocationResponse> createLocationAsync(
        @WebParam(name = "location", targetNamespace = "http://tempuri.org/")
        LocationDTO location);

    /**
     * 
     * @param location
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "CreateLocation", action = "http://tempuri.org/IAQAcquisitionService/CreateLocation")
    @RequestWrapper(localName = "CreateLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateLocation")
    @ResponseWrapper(localName = "CreateLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateLocationResponse")
    public Future<?> createLocationAsync(
        @WebParam(name = "location", targetNamespace = "http://tempuri.org/")
        LocationDTO location,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<CreateLocationResponse> asyncHandler);

    /**
     * 
     * @param location
     * @return
     *     returns java.lang.Long
     */
    @WebMethod(operationName = "CreateLocation", action = "http://tempuri.org/IAQAcquisitionService/CreateLocation")
    @WebResult(name = "CreateLocationResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "CreateLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateLocation")
    @ResponseWrapper(localName = "CreateLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.CreateLocationResponse")
    public Long createLocation(
        @WebParam(name = "location", targetNamespace = "http://tempuri.org/")
        LocationDTO location);

    /**
     * 
     * @param location
     * @return
     *     returns javax.xml.ws.Response<com.aquarius.DataAcquisition.ModifyLocationResponse>
     */
    @WebMethod(operationName = "ModifyLocation", action = "http://tempuri.org/IAQAcquisitionService/ModifyLocation")
    @RequestWrapper(localName = "ModifyLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.ModifyLocation")
    @ResponseWrapper(localName = "ModifyLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.ModifyLocationResponse")
    public Response<ModifyLocationResponse> modifyLocationAsync(
        @WebParam(name = "location", targetNamespace = "http://tempuri.org/")
        LocationDTO location);

    /**
     * 
     * @param location
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "ModifyLocation", action = "http://tempuri.org/IAQAcquisitionService/ModifyLocation")
    @RequestWrapper(localName = "ModifyLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.ModifyLocation")
    @ResponseWrapper(localName = "ModifyLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.ModifyLocationResponse")
    public Future<?> modifyLocationAsync(
        @WebParam(name = "location", targetNamespace = "http://tempuri.org/")
        LocationDTO location,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<ModifyLocationResponse> asyncHandler);

    /**
     * 
     * @param location
     */
    @WebMethod(operationName = "ModifyLocation", action = "http://tempuri.org/IAQAcquisitionService/ModifyLocation")
    @RequestWrapper(localName = "ModifyLocation", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.ModifyLocation")
    @ResponseWrapper(localName = "ModifyLocationResponse", targetNamespace = "http://tempuri.org/", className = "com.aquarius.DataAcquisition.ModifyLocationResponse")
    public void modifyLocation(
        @WebParam(name = "location", targetNamespace = "http://tempuri.org/")
        LocationDTO location);

}
