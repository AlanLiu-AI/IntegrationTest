<?xml version="1.0"?>
<project name="AQClient.Java" default="build" basedir=".">
	<!-- Sets variables which can later be used. -->
	<!-- The value of a property is accessed via ${} -->
	<property name="src.dir" location="src" />
	<property name="demo.dir" location="demo" />
	<property name="test.dir" location="test" />
	<property name="lib.dir" location="lib" />
	<property name="build.dir" location="build" />
	<property name="build.lib.dir" location="${build.dir}/lib" />
	<property name="build.demo.dir" location="${build.dir}/demo" />
	<property name="build.test.dir" location="${build.dir}/test" />
	<property name="dist.dir" location="dist" />
	<property name="target.jar" location="${dist.dir}/AQProxy.jar" />
	
	<path id="application" location="${target.jar}"/>

	<path id="metro.classpath">
		<fileset dir="${lib.dir}" includes="**/webservices*.jar">
			<!--webservices-api.jar, webservices-extra.jar, webservices-extra-api.jar, webservices-rt.jar -->
		</fileset>
	</path>
	
	<path id="junit.classpath">
		<fileset dir="${lib.dir}">
			<include name="junit-4.11.jar"/>
			<include name="hamcrest-all-1.3.jar"/>
		</fileset>
	</path>
	
	<path id="runtime.classpath">
		<path refid="metro.classpath"/>
		<pathelement location="${target.jar}"/>
	</path>

	<!-- Deletes the existing build, docs and dist directory-->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!-- Creates the  build, docs and dist directory-->
	<target name="prebuild">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.lib.dir}" />
		<mkdir dir="${build.demo.dir}" />
		<mkdir dir="${build.test.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- Compiles the java code -->
	<target name="compile" depends="prebuild">
		<javac srcdir="${src.dir}" destdir="${build.lib.dir}" includeantruntime="false">
			<classpath>
				<path refid="metro.classpath"/>
			</classpath>
		</javac>
		<javac srcdir="${demo.dir}" destdir="${build.demo.dir}" includeantruntime="false">
			<classpath>
				<path refid="metro.classpath"/>
				<pathelement location="${build.lib.dir}"/>
			</classpath>
		</javac>
		<javac srcdir="${test.dir}" destdir="${build.test.dir}" includeantruntime="false">
			<classpath>
				<path refid="metro.classpath"/>
				<path refid="junit.classpath"/>
				<pathelement location="${build.lib.dir}"/>
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="prebuild, compile">
		<description>create target jar file</description>
		<jar destfile="${target.jar}" basedir="${build.lib.dir}">
			<manifest>
			</manifest>
		</jar>
	</target>

	<target name="build" depends="compile, jar">
		<description>build</description>		
	</target>
		
	<target name="rebuild" depends="clean, build">
		<description>rebuild</description>
	</target>
	
	<target name="test" depends="build">
			<description>JUnit tests</description>
			<junit haltonerror="false" haltonfailure="false">
				<classpath>
					<pathelement location="${build.test.dir}"/>
					<pathelement location="${build.lib.dir}"/>
					<path refid="runtime.classpath"/>
					<path refid="junit.classpath"/>
				</classpath>
				<classpath refid="runtime.classpath"/>
				<classpath refid="junit.classpath"/>
				<batchtest todir="${build.test.dir}" fork="yes">
					<fileset dir="${test.dir}" includes="**/*Tests.java"/>
					<formatter type="plain" usefile="false"/>
				</batchtest>
			</junit>
		</target>

	<target name="demo" depends="build">
		<description>run demo application</description>
		<java fork="true" classname="com.aquarius.examples.AQProxyDemo">
			<arg value="-h"/>
			<classpath>
				<path refid="runtime.classpath"/>
				<pathelement location="${build.demo.dir}"/>
			</classpath>
		</java>
	</target>

</project> 
